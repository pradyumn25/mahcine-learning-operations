Failure # 1 (occurred at 2024-01-25_22-54-11)
[36mray::_Inner.train()[39m (pid=12721, ip=192.168.1.208, actor_id=bf2ae54615699ed51f4a40a601000000, repr=TorchTrainer)
  File "/home/ppundir/Desktop/Desktop/mahcine-learning-operations/mlops/lib/python3.10/site-packages/ray/tune/trainable/trainable.py", line 400, in train
    raise skipped from exception_cause(skipped)
  File "/home/ppundir/Desktop/Desktop/mahcine-learning-operations/mlops/lib/python3.10/site-packages/ray/train/_internal/utils.py", line 54, in check_for_failure
    ray.get(object_ref)
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.1.208, ID: eba14347a41c8ef07058c687b178237f602ac84abf3dfca0ee1e35c7) where the task (actor ID: a657c64828c069f99e875ca301000000, name=RayTrainWorker.__init__, pid=12760, memory used=1.52GB) was running was 13.52GB / 13.59GB (0.994994), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 3030953728be66ca92930596f06a9642c4ce3a40a43bdd8efbf25327) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.1.208`. To see the logs of the worker, use `ray logs worker-3030953728be66ca92930596f06a9642c4ce3a40a43bdd8efbf25327*out -ip 192.168.1.208. Top 10 memory users:
PID	MEM(GB)	COMMAND
12758	1.58	ray::_RayTrainWorker__execute.get_next
12759	1.53	ray::_RayTrainWorker__execute.get_next
12760	1.52	ray::_RayTrainWorker__execute.get_next
12757	1.46	ray::_RayTrainWorker__execute.get_next
3319	0.28	firefox
8829	0.27	/usr/lib/firefox/firefox-bin -contentproc -childID 20 -isForBrowser -prefsLen 32124 -prefMapSize 236...
12363	0.22	/opt/google/chrome/chrome --type=renderer --crashpad-handler-pid=11977 --enable-crash-reporter=, --o...
12721	0.19	ray::_Inner.train
5468	0.18	/home/ppundir/Desktop/Desktop/mahcine-learning-operations/mlops/bin/python -m ipykernel_launcher --f...
5344	0.13	/usr/share/code/code --type=renderer --crashpad-handler-pid=3982 --enable-crash-reporter=6f230fa1-d6...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
