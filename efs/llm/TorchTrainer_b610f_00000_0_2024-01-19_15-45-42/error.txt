Failure # 1 (occurred at 2024-01-19_15-46-07)
[36mray::_Inner.train()[39m (pid=25922, ip=192.168.1.185, actor_id=5a4d731a321eab000f812a9301000000, repr=TorchTrainer)
  File "/home/ppundir/Desktop/Desktop/mahcine-learning-operations/mlops/lib/python3.10/site-packages/ray/tune/trainable/trainable.py", line 400, in train
    raise skipped from exception_cause(skipped)
  File "/home/ppundir/Desktop/Desktop/mahcine-learning-operations/mlops/lib/python3.10/site-packages/ray/train/_internal/utils.py", line 54, in check_for_failure
    ray.get(object_ref)
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.1.185, ID: e4763503a3d9d31af3cf35a838bab225db80798e4282320f85d58ce8) where the task (actor ID: 68bc4a624500a970cecfd06701000000, name=RayTrainWorker.__init__, pid=25971, memory used=0.86GB) was running was 13.20GB / 13.59GB (0.971525), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 7965fa7093cfece0e8646d42203d744a2dd0380fa764c16213dd3499) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.1.185`. To see the logs of the worker, use `ray logs worker-7965fa7093cfece0e8646d42203d744a2dd0380fa764c16213dd3499*out -ip 192.168.1.185. Top 10 memory users:
PID	MEM(GB)	COMMAND
15449	1.17	/opt/google/chrome/chrome --type=renderer --crashpad-handler-pid=12191 --enable-crash-reporter=, --d...
10761	0.91	/home/ppundir/Desktop/Desktop/mahcine-learning-operations/mlops/bin/python -m ipykernel_launcher --f...
25970	0.89	ray::_RayTrainWorker__execute.get_next
25969	0.87	ray::_RayTrainWorker__execute.get_next
25971	0.86	ray::_RayTrainWorker__execute.get_next
25968	0.70	ray::_RayTrainWorker__execute.get_next
3088	0.30	firefox
10769	0.29	/usr/share/code/code --ms-enable-electron-run-as-node /home/ppundir/.vscode/extensions/ms-python.vsc...
25922	0.25	ray::_Inner.train
10621	0.24	/usr/share/code/code --type=renderer --crashpad-handler-pid=10155 --enable-crash-reporter=6f230fa1-d...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
